name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --prefer-offline

    - name: Run tests
      run: |
        mkdir -p test-results
        npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=test-results/results.xml
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/results.xml

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --prefer-offline --production

    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy Application
      env:
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SERVER_IP: ${{ secrets.SSH_HOST }}
        APP_PATH: ${{ secrets.APP_PATH }}
      run: |
        # Validate environment variables
        if [ -z "$REMOTE_USER" ] || [ -z "$SERVER_IP" ] || [ -z "$APP_PATH" ]; then
          echo "Missing required environment variables"
          exit 1
        fi

        # Create deployment script
        DEPLOY_SCRIPT=$(mktemp)
        cat << 'EOF' > $DEPLOY_SCRIPT
        #!/bin/bash
        set -euo pipefail
        cd $APP_PATH
        git fetch origin main
        git reset --hard origin/main
        npm ci --prefer-offline --production
        pm2 reload ecosystem.config.js --env production
        EOF

        # Execute deployment
        scp -o StrictHostKeyChecking=no $DEPLOY_SCRIPT ${REMOTE_USER}@${SERVER_IP}:/tmp/deploy.sh
        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${SERVER_IP} \
          "chmod +x /tmp/deploy.sh && /tmp/deploy.sh && rm /tmp/deploy.sh"