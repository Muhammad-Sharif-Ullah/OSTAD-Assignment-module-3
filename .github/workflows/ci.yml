name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to 'main' branch

jobs:
  # Test job
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Define the Node.js version

    - name: Install dependencies
      run: npm install  # Install application dependencies

    - name: Run tests
      run: npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=results/test-results.xml
      # You can change this to your specific testing framework and command
      # Here, it uses Mocha as an example, generating the test results in XML format.

    - name: Upload test results as artifact
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: results/test-results.xml  # Path to the test result file

  # Deploy job (to be customized)
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure the deploy job runs after the test job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to server (example)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        USER: ${{ secrets.USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        APPLICATION_PATH_LOCATION: ${{ secrets.APPLICATION_PATH_LOCATION }}
      run: |
        echo "Deploying to production environment... Below is the actual code for the deployment."
        
        # Export environment variables for the SSH session
        # export APPLICATION_PATH_LOCATION=$APPLICATION_PATH_LOCATION
        # export USER=$USER
        # export SERVER_IP=$SERVER_IP

        # SSH into the server and run the deployment script
        # ssh -i $SSH_PRIVATE_KEY $USER@$SERVER_IP << EOF
        # cd $APPLICATION_PATH_LOCATION
        # git pull origin main
        # npm install
        # pm2 restart my-app
        # EOF
